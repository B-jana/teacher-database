/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication3;

import java.sql.*;
import java.sql.DriverManager;
import java.text.SimpleDateFormat;
import static java.time.Clock.system;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author rgukt
 */
public class teacherwindow extends javax.swing.JFrame {

    /**
     * Creates new form teacherwindow
     */
    public teacherwindow() {
        initComponents();
       getmysqlconnection();
      filltable();//tacher form gets loaded
    }
   
    //JDBC CONNECTION 
    public Connection getmysqlconnection(){
       Connection con=null;
        
        try{
            
            Class.forName("com.mysql.cj.jdbc.Driver");
                 
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/Teacherdatabase","root","");
           
     //       JOptionPane.showMessageDialog(null,"Connetion is successful");
            return con;
            
        }catch(Exception e){
          
             JOptionPane.showMessageDialog(null,"error:"+e);
             
             return null;
        }
       
    }
    
    
    //ADD /SHOW THE DATA TO TABLE 
    
    public ArrayList<teacherbean> getallteacherdata(){
        
        ArrayList<teacherbean> al=null;
        al=new ArrayList<teacherbean>();
        try{
            Connection con=getmysqlconnection();
            String qry="select * from teacher";
            Statement st=con.createStatement();
            ResultSet r=st.executeQuery(qry);
            teacherbean teacher;
            while(r.next()){
                teacher = new teacherbean(Integer.parseInt(r.getString(1)),
                      r.getString("name"),Float.parseFloat(r.getString(3)),
                        r.getString(4),r.getString("Address"),r.getString(6));
            al.add(teacher);
            
            System.out.print("\n"+Integer.parseInt(r.getString(1)));
            System.out.println(r.getString("name"));
            System.out.println(Float.parseFloat(r.getString(3)));
            System.out.println(r.getString(4));
            System.out.println(r.getString("Address"));
            System.out.println(r.getString(6)+"\n");
            
    //        return al; //rmove hte taacher mistakely 
          
            
           
            
            }
            
        }catch(Exception e){
            
            JOptionPane.showMessageDialog(null, "Error in getallteacherdata()"+e);
            return al;
        }
        return al;
    }
    
    //fill the table with data
    public void filltable(){
        
        ArrayList<teacherbean> al=getallteacherdata();
        
        DefaultTableModel model=(DefaultTableModel)table.getModel();

        model.setRowCount(0); //Empty/clear the table
        Object[] row=new Object[6];
        
        for(int i=0;i<al.size();i++){
            
            row[0]=al.get(i).getId();
             row[1]=al.get(i).getName();
              row[2]=al.get(i).getSalary();
               row[3]=al.get(i).getDob();
                row[4]=al.get(i).getAddress();
                 row[5]=al.get(i).getSubject();
                 model.addRow(row);
                 
              
             
        }
        
    }
    
    
    public void showitemfieldteacher(int index){
        
        Id.setText(Integer.toString(getallteacherdata().get(index).getId()));
        Name.setText(getallteacherdata().get(index).getName());
        Salary.setText(Float.toString(getallteacherdata().get(index).getSalary()));
    //    Dob.setText(getallteacherdata().get(index).getDob());
        Address.setText(getallteacherdata().get(index).getAddress());
        Subject.setText(getallteacherdata().get(index).getSubject());
        
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Id = new javax.swing.JTextField();
        Name = new javax.swing.JTextField();
        Salary = new javax.swing.JTextField();
        Address = new javax.swing.JTextField();
        Subject = new javax.swing.JTextField();
        Clear = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        Search = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        Dob = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 102));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("ZILLA PARISATH HIGH SCHOOL ");

        jLabel2.setFont(new java.awt.Font("Te X Gyre Bonum", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 204));
        jLabel2.setText("Teacher Name :");

        jLabel3.setFont(new java.awt.Font("Te X Gyre Bonum", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 204));
        jLabel3.setText(" Teacher ID :");

        jLabel5.setFont(new java.awt.Font("Te X Gyre Bonum", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 204));
        jLabel5.setText("Teacher Salary :");

        jLabel6.setFont(new java.awt.Font("Te X Gyre Bonum", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 204));
        jLabel6.setText(" Date Of  Borth :");

        jLabel7.setFont(new java.awt.Font("Te X Gyre Bonum", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 0, 204));
        jLabel7.setText("Address :");

        jLabel8.setFont(new java.awt.Font("Te X Gyre Bonum", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 204));
        jLabel8.setText("Subject :");

        jLabel9.setFont(new java.awt.Font("L M Sans Quot8", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 0, 204));
        jLabel9.setText("Andhrapradesh,srikakulam,talavaram");

        jLabel10.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel10.setText("Teacher Inforamation");

        Id.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        Id.setForeground(new java.awt.Color(51, 51, 255));
        Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdActionPerformed(evt);
            }
        });

        Name.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N

        Salary.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N

        Address.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N

        Subject.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N

        Clear.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        Clear.setForeground(new java.awt.Color(0, 51, 204));
        Clear.setText("New / Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        Save.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        Save.setForeground(new java.awt.Color(0, 51, 204));
        Save.setText("Save / Insert");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Delete.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        Delete.setForeground(new java.awt.Color(0, 51, 204));
        Delete.setText("Delete / Remove");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Edit.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        Edit.setForeground(new java.awt.Color(0, 51, 204));
        Edit.setText("Update / Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 204));
        jLabel11.setText("Search Teacher By Name :");

        Search.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchKeyReleased(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher Id", "Teacher Name", "Salary", "Date Of Birth", "Address", "Subject "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel12.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 153));
        jLabel12.setText("All Teacher Information");

        Dob.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(404, 404, 404)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(81, 81, 81)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(28, 28, 28)
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(Salary, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Dob, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(90, 90, 90)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(11, 11, 11))
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Address, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Subject, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(202, 202, 202)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel11)
                                    .addGap(18, 18, 18)
                                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(78, 78, 78))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(138, 138, 138)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(Delete)))))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Dob, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(403, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("Rajiv gn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdActionPerformed
     //TO CLEAR ALL THE FIELDS 
    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed

        
        Id.setText("");
        Name.setText("");
        Salary.setText("");
        Subject.setText("");
        Address.setText("");
        

        //VALIDATION LOGIN TO CHECK WHTHER ALL INPUT FIELDS ENTERED OR NOT  
      
    }//GEN-LAST:event_ClearActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
  
        if(Id.getText().toString().equals("")||
                Name.getText().toString().equals("") || 
                Salary.getText().toString().equals("")||
              //  Dob.getText().toString().equals("") ||
                Subject.getText().toString().equals("")||
                Address.getText().toString().equals("")){
            
            JOptionPane.showMessageDialog(null,"All Fields Are Compulsary");
            
        }else{
              
            try{
                
                Connection conn= getmysqlconnection();
                String qur="insert into teacher(id,name,salary,dob,address,subject) values(?,?,?,?,?,?)";
                
                java.sql.PreparedStatement p = conn.prepareStatement(qur);
               
               p.setInt(1,Integer.parseInt(Id.getText().toString()));
                p.setString(2,Name.getText().toString());
                 p.setFloat(3,Float.parseFloat(Salary.getText().toString()));
      //                p.setString(4,Dob.getText().toString());
      
      
                    SimpleDateFormat td=new SimpleDateFormat("dd-MM-yyyy");
                    String d1=td.format(Dob.getDate());
                    p.setString(4, d1);
                    
                   p.setString(5,Address.getText().toString());
                    p.setString(6,Subject.getText().toString());
                
                        int result=p.executeUpdate();
                        
                        filltable();//filltable( ) called to display the data after newly inserted teacher into database table
                 
                        if(result>=1){
                            JOptionPane.showMessageDialog(null,result+"Teacher saved successfully to Database");
                        }
                        else{
                            JOptionPane.showMessageDialog(null,"Teacher insertion failed try again");
                        }
                        
                         
                  if(p!=null){
                   p.close();
                    }
                        
                         if(conn!=null){
                            conn.close();
                        }
                        
            }catch(Exception e){
                
                JOptionPane.showMessageDialog(null,"Error is inseert"+e);
            }
            
            //clear the fields
         Id.setText("");
        Name.setText("");
        Salary.setText("");
     //   Dob.setText("");
        Subject.setText("");
        Address.setText("");
        
        }
      
    }//GEN-LAST:event_SaveActionPerformed

    //UPDATE THE TEACHER DATA
    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
      
           if(Id.getText().toString().equals("")
                ||Name.getText().toString().equals("") || 
                Salary.getText().toString().equals("")||
       //          Dob.getText().toString().equals("")||
                Subject.getText().toString().equals("")||
                Address.getText().toString().equals("")){
            
            JOptionPane.showMessageDialog(null,"All Fields Are Compulsary");
            
        }else{
              
            try{
                
                Connection conn= getmysqlconnection();
                String qur="update teacher set name=?, salary=?, dob=?, address=?, subject=? where id=?";
                
                java.sql.PreparedStatement p = conn.prepareStatement(qur);
               
             
                p.setString(1,Name.getText().toString());
                 p.setFloat(2,Float.parseFloat(Salary.getText().toString()));
        //              p.setString(3,Dob.getText().toString());
        
                     SimpleDateFormat td=new SimpleDateFormat("dd-MM-yyyy");
                    String d1=td.format(Dob.getDate());
                    p.setString(4, d1);
                    
                   p.setString(4,Address.getText().toString());
                    p.setString(5,Subject.getText().toString());
                
                    
                      p.setInt(6,Integer.parseInt(Id.getText().toString()));
                      
                        int result=p.executeUpdate();
                        
                          filltable();//filltable( ) called to display the data after newly updated teacher into database table
             
                        if(result>=1){
                            JOptionPane.showMessageDialog(null,result+"Teacher updated successfully to Database"+Name.getText().toString());
                        }
                        else{
                            JOptionPane.showMessageDialog(null,"Teacher update failed try again");
                        }
                       if(conn!=null){
                            conn.close();
                        }
                
            }catch(Exception e){
                
                JOptionPane.showMessageDialog(null,"Error is update"+e);
            }
            
            //clear the fields
         Id.setText("");
        Name.setText("");
        Salary.setText("");
   //     Dob.setText("");
        Subject.setText("");
        Address.setText("");
        
        }
    }//GEN-LAST:event_EditActionPerformed
        //DELETE 
    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
       
         if(Id.getText().toString().equals("")){
            
            JOptionPane.showMessageDialog(null,"Please enter ID of The Teacher");
            
        }else{
              
            try{
                
                Connection conn= getmysqlconnection();
                String qur="delete from teacher where id=?";
                
                java.sql.PreparedStatement p = conn.prepareStatement(qur);
               
               p.setInt(1,Integer.parseInt(Id.getText()));
                
                
                        int result=p.executeUpdate();
                        
                         filltable();//filltable( ) called to display the data after newly deleted teacher into database table
             
                        if(result>=1){
                            JOptionPane.showMessageDialog(null,result+"Teacher deleted successfully to Database Teachername"+Id.getText());
                        }
                        else{
                            JOptionPane.showMessageDialog(null,"Teacher deletion failed try again");
                        }
                        
                        if(conn!=null){
                            conn.close();
                        }
               
                        
            }catch(Exception e){
                
                JOptionPane.showMessageDialog(null,"Error is delete"+e);
            }
            
            //clear the fields
         Id.setText("");
        Name.setText("");
        Salary.setText("");
  //      Dob.setText("");
        Subject.setText("");
        Address.setText("");
        
        }
    }//GEN-LAST:event_DeleteActionPerformed

    
    //when the user clicks the cells of jtable then the data and add to input fields so that will removed
    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
       
        int ind=table.getSelectedRow();
        showitemfieldteacher(ind);   //line number 120
        
        
    }//GEN-LAST:event_tableMouseClicked

    
    //SEARCH THE FACULTY BY NAME
    private void SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchKeyReleased
        
        ArrayList<teacherbean> al=null;
        al=new ArrayList<teacherbean>();
        String val=Search.getText().toString();
        
        try{
            
            Connection con=getmysqlconnection();
            
            String qry="select * from teacher where name like '%"+val+"%'";
            Statement st=con.createStatement();
            ResultSet r=st.executeQuery(qry);
            teacherbean teacher;
            while(r.next()){
                 teacher = new teacherbean(Integer.parseInt(r.getString(1)),
                r.getString("name"),Float.parseFloat(r.getString(3)),
                r.getString(4),r.getString("Address"),r.getString(6));
                 
            al.add(teacher);
                          

            }
            
            if(st!=null){
                st.close();
            }
            
            if(con!=null){
            con.close();
        }
            
            
    //   search teachers tobe added to the table
       
       //
        
        DefaultTableModel model=(DefaultTableModel)table.getModel();

        model.setRowCount(0); //Empty/clear the table
        Object[] row=new Object[6];
        
        for(int i=0;i<al.size();i++){
            
            row[0]=al.get(i).getId();
             row[1]=al.get(i).getName();
              row[2]=al.get(i).getSalary();
               row[3]=al.get(i).getDob();
                row[4]=al.get(i).getAddress();
                 row[5]=al.get(i).getSubject();
                 model.addRow(row);
            
            
        }
        
        }
        
        catch(Exception e){
            
            JOptionPane.showMessageDialog(null,"error at table key realesed"+e);
        }
        
    }//GEN-LAST:event_SearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teacherwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teacherwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teacherwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teacherwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new teacherwindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Address;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Delete;
    private com.toedter.calendar.JDateChooser Dob;
    private javax.swing.JButton Edit;
    private javax.swing.JTextField Id;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Salary;
    private javax.swing.JButton Save;
    private javax.swing.JTextField Search;
    private javax.swing.JTextField Subject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
